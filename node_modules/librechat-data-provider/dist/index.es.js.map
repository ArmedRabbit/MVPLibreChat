{"version":3,"file":"index.es.js","sources":["../src/types/runs.ts","../src/types/assistants.ts","../src/schemas.ts","../src/bedrock.ts","../src/file-config.ts","../src/models.ts","../src/types/files.ts","../src/config.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/roles.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/sse.js","../src/actions.ts","../src/createPayload.ts"],"sourcesContent":["export enum ContentTypes {\n  TEXT = 'text',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  retrieval = 'retrieval',\n  function = 'function',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | null;\n\nexport type AgentModelParameters = {\n  temperature: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentToolResources {\n  execute_code?: ExecuteCodeResource;\n  file_search?: AgentFileSearchResource;\n}\nexport interface ExecuteCodeResource {\n  /**\n   * A list of file IDs made available to the `execute_code` tool.\n   * There can be a maximum of 20 files associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface AgentFileSearchResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n  /**\n   * A list of file IDs made available to the `file_search` tool.\n   * To be used before vector stores are implemented.\n   */\n  file_ids?: Array<string>;\n}\n\nexport type Agent = {\n  id: string;\n  name: string | null;\n  author?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n};\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n};\n\nexport type AgentListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  provider?: AgentProvider;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text: Text & PartMetadata }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\n/* Assistant types */\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'SYSTEM_DEFINED',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  bingAI = 'bingAI',\n  chatGPTBrowser = 'chatGPTBrowser',\n  google = 'google',\n  gptPlugins = 'gptPlugins',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.openAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    return model.split('.')[0] as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  isCollaborative: false,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n    min: 0,\n    max: 2,\n    step: 1,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest',\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: 8192,\n    step: 1,\n    default: 8192,\n  },\n  temperature: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 1,\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.95,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 0.01,\n    default: 40,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 8192;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-20240620',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  promptCache: {\n    default: true,\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1,\n    default: ANTHROPIC_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (modelName.includes('claude-3-5-sonnet')) {\n        return ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (!modelName.includes('claude-3-5-sonnet') && value > LEGACY_ANTHROPIC_MAX_OUTPUT) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.7,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 1,\n    default: 5,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string(),\n  icon: z.string(),\n  authConfig: z.array(tPluginAuthConfigSchema),\n  authenticated: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isEdited: z.boolean().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n});\n\nexport type TAttachmentMetadata = { messageId: string; toolCallId: string };\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  resendFiles: z.boolean().optional(),\n  imageDetail: eImageDetailSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistant + agents */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n  greeting: z.string().optional(),\n  spec: z.string().optional(),\n  /*\n  Deprecated fields\n  */\n  /** @deprecated */\n  suggestions: z.array(z.string()).optional(),\n  /** @deprecated */\n  systemMessage: z.string().nullable().optional(),\n  /** @deprecated */\n  jailbreak: z.boolean().optional(),\n  /** @deprecated */\n  jailbreakConversationId: z.string().nullable().optional(),\n  /** @deprecated */\n  conversationSignature: z.string().nullable().optional(),\n  /** @deprecated */\n  clientId: z.string().nullable().optional(),\n  /** @deprecated */\n  invocationId: z.number().nullable().optional(),\n  /** @deprecated */\n  toneStyle: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport const tPresetUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isAnonymous: z.boolean(),\n  isPublic: z.boolean(),\n  isVisible: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    return {\n      ...obj,\n      model: obj.model ?? google.model.default,\n      modelLabel: obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      temperature: obj.temperature ?? google.temperature.default,\n      maxOutputTokens: obj.maxOutputTokens ?? google.maxOutputTokens.default,\n      topP: obj.topP ?? google.topP.default,\n      topK: obj.topK ?? google.topK.default,\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n  })\n  .catch(() => ({\n    model: google.model.default,\n    modelLabel: null,\n    promptPrefix: null,\n    examples: [{ input: { content: '' }, output: { content: '' } }],\n    temperature: google.temperature.default,\n    maxOutputTokens: google.maxOutputTokens.default,\n    topP: google.topP.default,\n    topK: google.topK.default,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const bingAISchema = tConversationSchema\n  .pick({\n    jailbreak: true,\n    systemMessage: true,\n    context: true,\n    toneStyle: true,\n    jailbreakConversationId: true,\n    conversationSignature: true,\n    clientId: true,\n    invocationId: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: '',\n    jailbreak: obj.jailbreak ?? false,\n    systemMessage: obj.systemMessage ?? null,\n    context: obj.context ?? null,\n    toneStyle: obj.toneStyle ?? 'creative',\n    jailbreakConversationId: obj.jailbreakConversationId ?? null,\n    conversationSignature: obj.conversationSignature ?? null,\n    clientId: obj.clientId ?? null,\n    invocationId: obj.invocationId ?? 1,\n  }))\n  .catch(() => ({\n    model: '',\n    jailbreak: false,\n    systemMessage: null,\n    context: null,\n    toneStyle: 'creative',\n    jailbreakConversationId: null,\n    conversationSignature: null,\n    clientId: null,\n    invocationId: 1,\n  }));\n\nexport const chatGPTBrowserSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'text-davinci-002-render-sha',\n  }))\n  .catch(() => ({\n    model: 'text-davinci-002-render-sha',\n  }));\n\nexport const gptPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    artifacts: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(obj: T): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport const assistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    artifacts: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n  }));\n\nexport const compactAssistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    promptPrefix: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  // will change after adding temperature\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n\nexport const agentsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    imageDetail: true,\n    agent_id: true,\n    instructions: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAISchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    artifacts: true,\n    imageDetail: true,\n    stop: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n    max_tokens: true,\n  })\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n    resendFiles: true,\n    promptCache: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactChatGPTSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nconst tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsSchema = tConversationSchema\n  .pick({\n    model: true,\n    agent_id: true,\n    instructions: true,\n    additional_instructions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n","import { z } from 'zod';\nimport * as s from './schemas';\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform(s.removeNullishValues)\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  const result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  // Remove additionalModelRequestFields from the result\n  delete result.additionalModelRequestFields;\n\n  return result;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { FileConfig, EndpointFileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|x-c\\+\\+|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { fileConfigSchema } from './file-config';\nimport { specsConfigSchema } from './models';\nimport { FileSources } from './types/files';\nimport { TModelsConfig } from './types';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> = T extends z.ZodDefault<z.ZodTypeAny>\n  ? ReturnType<T['_def']['defaultValue']>\n  : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema>;\nexport type TAzureGroupMap = Record<\n  string,\n  TAzureBaseSchema & { models: Record<string, TAzureModelConfig> }\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const agentsEndpointSChema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSChema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  interface: z\n    .object({\n      privacyPolicy: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n        })\n        .optional(),\n      termsOfService: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n          modalAcceptance: z.boolean().optional(),\n          modalTitle: z.string().optional(),\n          modalContent: z.string().or(z.array(z.string())).optional(),\n        })\n        .optional(),\n      endpointsMenu: z.boolean().optional(),\n      modelSelect: z.boolean().optional(),\n      parameters: z.boolean().optional(),\n      sidePanel: z.boolean().optional(),\n      multiConvo: z.boolean().optional(),\n      bookmarks: z.boolean().optional(),\n      presets: z.boolean().optional(),\n      prompts: z.boolean().optional(),\n    })\n    .default({\n      endpointsMenu: true,\n      modelSelect: true,\n      parameters: true,\n      sidePanel: true,\n      presets: true,\n      multiConvo: true,\n      bookmarks: true,\n      prompts: true,\n    }),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSChema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.bingAI,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.bingAI]: 'Bing',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = [\n  'claude-3-5-sonnet-20240620',\n  'claude-3-opus-20240229',\n  'claude-3-sonnet-20240229',\n  'claude-3-haiku-20240307',\n  'claude-2.1',\n  'claude-2',\n  'claude-1.2',\n  'claude-1',\n  'claude-1-100k',\n  'claude-instant-1',\n  'claude-instant-1-100k',\n];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: ['chatgpt-4o-latest', ...sharedOpenAIModels],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    'gemini-pro',\n    'gemini-pro-vision',\n    'chat-bison',\n    'chat-bison-32k',\n    'codechat-bison',\n    'codechat-bison-32k',\n    'text-bison',\n    'text-bison-32k',\n    'text-unicorn',\n    'code-gecko',\n    'code-bison',\n    'code-bison-32k',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    'chatgpt-4o-latest',\n    ...sharedOpenAIModels,\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.bingAI]: ['BingAI', 'Sydney'],\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs: { [key in EModelEndpoint]: string } = {\n  [EModelEndpoint.openAI]: `/api/ask/${EModelEndpoint.openAI}`,\n  [EModelEndpoint.bingAI]: `/api/ask/${EModelEndpoint.bingAI}`,\n  [EModelEndpoint.google]: `/api/ask/${EModelEndpoint.google}`,\n  [EModelEndpoint.custom]: `/api/ask/${EModelEndpoint.custom}`,\n  [EModelEndpoint.anthropic]: `/api/ask/${EModelEndpoint.anthropic}`,\n  [EModelEndpoint.gptPlugins]: `/api/ask/${EModelEndpoint.gptPlugins}`,\n  [EModelEndpoint.azureOpenAI]: `/api/ask/${EModelEndpoint.azureOpenAI}`,\n  [EModelEndpoint.chatGPTBrowser]: `/api/ask/${EModelEndpoint.chatGPTBrowser}`,\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n  [EModelEndpoint.bedrock]: `/api/${EModelEndpoint.bedrock}/chat`,\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'gpt-4o',\n  'gpt-4o-mini',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemini-1.5',\n];\nexport enum VisionModes {\n  generative = 'generative',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model === 'gpt-4-turbo-preview') {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the config store namespace.\n   */\n  ROLES = 'roles',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'startupConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'bans',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'encoded_domains',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'audioRuns',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'messages',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.7.5-rc2',\n  /** Key for the Custom Config's version (librechat.yaml). */\n  CONFIG_VERSION = '1.1.7',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last BingAI Settings */\n  LAST_BING = 'lastBingSettings',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = '',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n};\n","import type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  bingAISchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactChatGPTSchema,\n  chatGPTBrowserSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof chatGPTBrowserSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nconst endpointSchemas: Record<EModelEndpoint, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: chatGPTBrowserSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.bingAI,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  const envVarMatch = value.match(envVarRegex);\n  if (envVarMatch) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return process.env[envVarMatch[1]] || value;\n  }\n  return value;\n}\n\n/** Resolves header values to env variables if detected */\nexport function resolveHeaders(headers: Record<string, string> | undefined) {\n  const resolvedHeaders = { ...(headers ?? {}) };\n\n  if (headers && typeof headers === 'object' && !Array.isArray(headers)) {\n    Object.keys(headers).forEach((key) => {\n      resolvedHeaders[key] = extractEnvVariable(headers[key]);\n    });\n  }\n\n  return resolvedHeaders;\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n    jailbreak,\n  } = endpointOption;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && /\\bo1\\b/i.test(model)) {\n      return 'o1';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.bingAI) {\n    return jailbreak === true ? 'Sydney' : 'BingAI';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model && model.includes('gemini')) {\n      return 'Gemini';\n    } else if (model && model.includes('code')) {\n      return 'Codey';\n    }\n\n    return 'PaLM2';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof compactChatGPTSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<string, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  /* BingAI needs all fields */\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: compactChatGPTSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(contentParts: a.TMessageContentParts[]): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { errorsToString, extractEnvVariable, envVarRegex } from '../src/parsers';\nimport { azureGroupConfigsSchema } from '../src/config';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!group.deploymentName || !group.version) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          // For object models, check if deploymentName and version are required but missing.\n          if (\n            (!model.deploymentName && !group.deploymentName) ||\n            (!model.version && !group.version)\n          ) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: model.deploymentName || group.deploymentName,\n            // version: model.version || group.version,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName;\n\n  if (!instanceName && !groupConfig.serverless) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless && !groupConfig.baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(groupConfig.baseURL as string),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName, version } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName || groupConfig.deploymentName,\n        version: modelDetails.version || groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (groupConfig.baseURL) {\n    result.baseURL = extractEnvVariable(groupConfig.baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName as string;\n\n  if (!instanceName && !groupConfig.serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless && !groupConfig.baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (groupConfig.serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(groupConfig.baseURL ?? ''),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName, version } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName || groupConfig.deploymentName,\n        version: modelDetails.version || groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (groupConfig.baseURL) {\n    result.baseURL = extractEnvVariable(groupConfig.baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? setting.includeInput ?? true : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor(columns / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema = tConversationSchema.shape[setting.key as keyof TConversation];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (setting.type === SettingTypes.Number && isNaN(setting.default as number)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (setting.type === SettingTypes.Boolean && typeof setting.default !== 'boolean') {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string'\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import { z } from 'zod';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(false),\n});\n\nexport const roleSchema = z.object({\n  name: z.string(),\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n    [PermissionTypes.AGENTS]: agentPermissionsSchema,\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n});\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  logoutUser = 'logoutUser',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (conversationId: string, messageId?: string) =>\n  `/api/messages/${conversationId}${messageId ? `/${messageId}` : ''}`;\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLinks = (pageNumber: string, isPublic: boolean) =>\n  `${shareRoot}?pageNumber=${pageNumber}&isPublic=${isPublic}`;\nexport const createSharedLink = shareRoot;\nexport const updateSharedLink = shareRoot;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const abortRequest = (endpoint: string) => `/api/ask/${endpoint}/abort`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (pageNumber: string, isArchived?: boolean, tags?: string[]) =>\n  `${conversationsRoot}?pageNumber=${pageNumber}${isArchived ? '&isArchived=true' : ''}${tags\n    ?.map((tag) => `&tags=${tag}`)\n    .join('')}`;\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}/clear`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const search = (q: string, pageNumber: string) =>\n  `/api/search?q=${q}&pageNumber=${pageNumber}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) => `/api/auth/refresh${retry ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const assistants = ({\n  path,\n  options,\n  version,\n  endpoint,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n}) => {\n  let url = `/api/assistants/v${version}`;\n\n  if (path) {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path, options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path) {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) =>\n  `${roles()}/${roleName.toLowerCase()}/prompts`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\nimport { setTokenHeader } from './headers-helpers';\nimport * as endpoints from './api-endpoints';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean) => _post(endpoints.refreshToken(retry));\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const { token } = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') ? true : false,\n        );\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          setTokenHeader(token);\n          window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string,\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (conversationId === 'new') {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages(conversationId));\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = (\n  params?: q.SharedLinkListParams,\n): Promise<q.SharedLinksResponse> => {\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  const isPublic = params?.isPublic || true; // Default to true if not provided\n  return request.get(endpoints.getSharedLinks(pageNumber, isPublic));\n};\n\nexport function getSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport function createSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink, payload);\n}\n\nexport function updateSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink, payload);\n}\n\nexport function deleteSharedLink(shareId: string): Promise<t.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text, index });\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<string> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<t.TStartupConfig> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (data: FormData): Promise<f.TFileUpload> => {\n  return request.postMultiPart(endpoints.images(), data);\n};\n\nexport const uploadFile = (data: FormData): Promise<f.TFileUpload> => {\n  return request.postMultiPart(endpoints.files(), data);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<a.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      path: `avatar/${data.assistant_id}`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    endpoints.agents({\n      path: `avatar/${data.agent_id}`,\n    }),\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  // Assuming params has a pageNumber property\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  const isArchived = params?.isArchived || false; // Default to false if not provided\n  const tags = params?.tags || []; // Default to an empty array if not provided\n  return request.get(endpoints.conversations(pageNumber, isArchived, tags));\n};\n\nexport const listConversationsByQuery = (\n  params?: q.ConversationListParams & { searchQuery?: string },\n): Promise<q.ConversationListResponse> => {\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  const searchQuery = params?.searchQuery || ''; // If no search query is provided, default to an empty string\n  // Update the endpoint to handle a search query\n  if (searchQuery !== '') {\n    return request.get(endpoints.search(searchQuery, pageNumber));\n  } else {\n    return request.get(endpoints.conversations(pageNumber));\n  }\n};\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string,\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePromptPermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n","/* eslint-disable */\n/**\n * Copyright (C) 2016 Maxime Petazzoni <maxime.petazzoni@bulix.org>.\n * All rights reserved.\n */\n\nimport request from './request';\nimport { setTokenHeader } from './headers-helpers';\n\nvar SSE = function (url, options) {\n  if (!(this instanceof SSE)) {\n    return new SSE(url, options);\n  }\n\n  this.INITIALIZING = -1;\n  this.CONNECTING = 0;\n  this.OPEN = 1;\n  this.CLOSED = 2;\n\n  this.url = url;\n\n  options = options || {};\n  this.headers = options.headers || {};\n  this.payload = options.payload !== undefined ? options.payload : '';\n  this.method = options.method || (this.payload && 'POST') || 'GET';\n  this.withCredentials = !!options.withCredentials;\n\n  this.FIELD_SEPARATOR = ':';\n  this.listeners = {};\n\n  this.xhr = null;\n  this.readyState = this.INITIALIZING;\n  this.progress = 0;\n  this.chunk = '';\n\n  this.addEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      this.listeners[type] = [];\n    }\n\n    if (this.listeners[type].indexOf(listener) === -1) {\n      this.listeners[type].push(listener);\n    }\n  };\n\n  this.removeEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      return;\n    }\n\n    var filtered = [];\n    this.listeners[type].forEach(function (element) {\n      if (element !== listener) {\n        filtered.push(element);\n      }\n    });\n    if (filtered.length === 0) {\n      delete this.listeners[type];\n    } else {\n      this.listeners[type] = filtered;\n    }\n  };\n\n  this.dispatchEvent = function (e) {\n    if (!e) {\n      return true;\n    }\n\n    e.source = this;\n\n    var onHandler = 'on' + e.type;\n    if (this.hasOwnProperty(onHandler)) {\n      this[onHandler].call(this, e);\n      if (e.defaultPrevented) {\n        return false;\n      }\n    }\n\n    if (this.listeners[e.type]) {\n      return this.listeners[e.type].every(function (callback) {\n        callback(e);\n        return !e.defaultPrevented;\n      });\n    }\n\n    return true;\n  };\n\n  this._setReadyState = function (state) {\n    var event = new CustomEvent('readystatechange');\n    event.readyState = state;\n    this.readyState = state;\n    this.dispatchEvent(event);\n  };\n\n  this._onStreamFailure = function (e) {\n    var event = new CustomEvent('error');\n    event.data = e.currentTarget.response;\n    this.dispatchEvent(event);\n    this.close();\n  };\n\n  this._onStreamAbort = function (e) {\n    this.dispatchEvent(new CustomEvent('abort'));\n    this.close();\n  };\n\n  this._onStreamProgress = async function (e) {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.status === 401 && !this._retry) {\n      this._retry = true;\n      try {\n        const refreshResponse = await request.refreshToken();\n        this.headers = {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${refreshResponse.token}`,\n        };\n        setTokenHeader(refreshResponse.token);\n        window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: refreshResponse.token }));\n        this.stream();\n      } catch (err) {\n        this._onStreamFailure(e);\n        return;\n      }\n    } else if (this.xhr.status !== 200) {\n      this._onStreamFailure(e);\n      return;\n    }\n\n    if (this.readyState == this.CONNECTING) {\n      this.dispatchEvent(new CustomEvent('open'));\n      this._setReadyState(this.OPEN);\n    }\n\n    var data = this.xhr.responseText.substring(this.progress);\n    this.progress += data.length;\n    data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(\n      function (part) {\n        if (part.trim().length === 0) {\n          this.dispatchEvent(this._parseEventChunk(this.chunk.trim()));\n          this.chunk = '';\n        } else {\n          this.chunk += part;\n        }\n      }.bind(this),\n    );\n  };\n\n  this._onStreamLoaded = function (e) {\n    this._onStreamProgress(e);\n\n    // Parse the last chunk.\n    this.dispatchEvent(this._parseEventChunk(this.chunk));\n    this.chunk = '';\n  };\n\n  /**\n   * Parse a received SSE event chunk into a constructed event object.\n   */\n  this._parseEventChunk = function (chunk) {\n    if (!chunk || chunk.length === 0) {\n      return null;\n    }\n\n    var e = { id: null, retry: null, data: '', event: 'message' };\n    chunk.split(/\\n|\\r\\n|\\r/).forEach(\n      function (line) {\n        line = line.trimRight();\n        var index = line.indexOf(this.FIELD_SEPARATOR);\n        if (index <= 0) {\n          // Line was either empty, or started with a separator and is a comment.\n          // Either way, ignore.\n          return;\n        }\n\n        var field = line.substring(0, index);\n        if (!(field in e)) {\n          return;\n        }\n\n        var value = line.substring(index + 1).trimLeft();\n        if (field === 'data') {\n          e[field] += value;\n        } else {\n          e[field] = value;\n        }\n      }.bind(this),\n    );\n\n    var event = new CustomEvent(e.event);\n    event.data = e.data;\n    event.id = e.id;\n    return event;\n  };\n\n  this._checkStreamClosed = function () {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.readyState === XMLHttpRequest.DONE) {\n      this._setReadyState(this.CLOSED);\n    }\n  };\n\n  this.stream = function () {\n    this._setReadyState(this.CONNECTING);\n\n    this.xhr = new XMLHttpRequest();\n    this.xhr.addEventListener('progress', this._onStreamProgress.bind(this));\n    this.xhr.addEventListener('load', this._onStreamLoaded.bind(this));\n    this.xhr.addEventListener('readystatechange', this._checkStreamClosed.bind(this));\n    this.xhr.addEventListener('error', this._onStreamFailure.bind(this));\n    this.xhr.addEventListener('abort', this._onStreamAbort.bind(this));\n    this.xhr.open(this.method, this.url);\n    for (var header in this.headers) {\n      this.xhr.setRequestHeader(header, this.headers[header]);\n    }\n    this.xhr.withCredentials = this.withCredentials;\n    this.xhr.send(this.payload);\n  };\n\n  this.close = function () {\n    if (this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.xhr.abort();\n    this.xhr = null;\n    this._setReadyState(this.CLOSED);\n  };\n};\n\nexport { SSE };\n// Export our SSE module for npm.js\n// if (typeof exports !== 'undefined') {\n//   // exports.SSE = SSE;\n//   module.exports = { SSE };\n// }\n","import { z } from 'zod';\nimport axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { FunctionTool, Schema, Reference, ActionMetadata } from './types/assistants';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools, AuthTypeEnum, AuthorizationTypeEnum } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n\n  constructor(name: string, description: string, parameters: ParametersSchema) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n  }\n\n  toObjectTool(): FunctionTool {\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters: this.parameters,\n      },\n    };\n  }\n}\n\nexport class ActionRequest {\n  domain: string;\n  path: string;\n  method: string;\n  operation: string;\n  operationHash?: string;\n  isConsequential: boolean;\n  contentType: string;\n  params?: object;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n  ) {\n    this.domain = domain;\n    this.path = path;\n    this.method = method;\n    this.operation = operation;\n    this.isConsequential = isConsequential;\n    this.contentType = contentType;\n  }\n\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  setParams(params: object) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = params;\n\n    for (const [key, value] of Object.entries(params)) {\n      const paramPattern = `{${key}}`;\n      if (this.path.includes(paramPattern)) {\n        this.path = this.path.replace(paramPattern, encodeURIComponent(value as string));\n        delete (this.params as Record<string, unknown>)[key];\n      }\n    }\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    if (!metadata.auth) {\n      return;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n    } = metadata;\n\n    const isApiKey = api_key && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth =\n      oauth_client_id &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url &&\n      client_url &&\n      scope &&\n      token_exchange_method;\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: WIP - OAuth support\n      if (!this.authToken) {\n        const tokenResponse = await axios.post(\n          client_url,\n          {\n            client_id: oauth_client_id,\n            client_secret: oauth_client_secret,\n            scope: scope,\n            grant_type: 'client_credentials',\n          },\n          {\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          },\n        );\n        this.authToken = tokenResponse.data.access_token;\n      }\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n  }\n\n  async execute() {\n    const url = createURL(this.domain, this.path);\n    const headers = {\n      ...this.authHeaders,\n      'Content-Type': this.contentType,\n    };\n\n    const method = this.method.toLowerCase();\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: this.params });\n    } else if (method === 'post') {\n      return axios.post(url, this.params, { headers });\n    } else if (method === 'put') {\n      return axios.put(url, this.params, { headers });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: this.params });\n    } else if (method === 'patch') {\n      return axios.patch(url, this.params, { headers });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${this.method}`);\n    }\n  }\n}\n\nexport function resolveRef(\n  schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | OpenAPIV3.RequestBodyObject,\n  components?: OpenAPIV3.ComponentsObject,\n): OpenAPIV3.SchemaObject {\n  if ('$ref' in schema && components) {\n    const refPath = schema.$ref.replace(/^#\\/components\\/schemas\\//, '');\n    const resolvedSchema = components.schemas?.[refPath];\n    if (!resolvedSchema) {\n      throw new Error(`Reference ${schema.$ref} not found`);\n    }\n    return resolveRef(resolvedSchema, components);\n  }\n  return schema as OpenAPIV3.SchemaObject;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters) {\n          const paramObj = param as OpenAPIV3.ParameterObject;\n          const resolvedSchema = resolveRef(\n            { ...paramObj.schema } as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n            openapiSpec.components,\n          );\n          parametersSchema.properties[paramObj.name] = resolvedSchema;\n          if (paramObj.required) {\n            parametersSchema.required.push(paramObj.name);\n          }\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as OpenAPIV3.RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content)[0];\n        const schema = content[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n      }\n\n      const functionSignature = new FunctionSignature(operationId, description, parametersSchema);\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!operationObj['x-openai-isConsequential'], // Custom extension for consequential actions\n        operationObj.requestBody ? 'application/json' : 'application/x-www-form-urlencoded',\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject;\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const { conversation, userMessage, endpointOption, isEdited, isContinued } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint, endpointType } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  let server = EndpointURLs[endpointType ?? endpoint];\n\n  if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n    server += '/modify';\n  } else if (isEdited) {\n    server = server.replace('/ask/', '/edit/');\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n  };\n\n  return { server, payload };\n}\n"],"names":["ContentTypes","StepTypes","ToolCallTypes","Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","FilePurpose","actionDelimiter","actionDomainSeparator","hostImageIdSuffix","hostImageNamePrefix","AssistantStreamEvents","defaultOrderQuery","order","limit","AuthType","isUUID","z","string","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","bedrock","openAI","anthropic","custom","ImageDetail","getModelKey","endpoint","model","split","getSettingsKeys","endpointKey","modelKey","concat","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","isAgentsEndpoint","isParamEndpoint","endpointType","has","EAgent","imageDetailNumeric","_a","low","auto","high","imageDetailValue","eImageDetailSchema","defaultAssistantFormValues","assistant","id","name","description","instructions","conversation_starters","functions","code_interpreter","image_vision","retrieval","defaultAgentFormValues","_b","agent","model_parameters","tools","provider","projectIds","isCollaborative","execute_code","file_search","ImageVisionTool","_c","type","function","parameters","properties","required","isImageVisionTool","tool","openAISettings","default","temperature","min","max","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","undefined","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","ANTHROPIC_MAX_OUTPUT","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","includes","set","value","legacy","agentsSettings","endpointSettings","_d","google","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","object","authField","label","tPluginSchema","pluginKey","icon","authConfig","array","authenticated","boolean","optional","isButton","tExampleSchema","input","content","output","agentOptionSettings","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","text","generation","isEdited","isCreatedByUser","error","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","coerceNumber","transform","val","trim","parseFloat","DocumentType","lazy","null","record","tConversationSchema","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","artifacts","context","examples","tags","file_ids","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","presetOverride","unknown","stop","greeting","spec","suggestions","systemMessage","jailbreak","jailbreakConversationId","conversationSignature","invocationId","toneStyle","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","tConvoUpdateSchema","tPresetUpdateSchema","tSharedLinkSchema","shareId","isAnonymous","isPublic","isVisible","tConversationTagSchema","_id","tag","count","position","googleSchema","pick","obj","__assign","_e","_f","_g","_h","_j","_k","_l","_m","catch","bingAISchema","chatGPTBrowserSchema","gptPluginsSchema","result","_o","_p","removeNullishValues","newObj","Object","keys","forEach","key","assistantSchema","compactAssistantSchema","agentsSchema","openAISchema","compactGoogleSchema","anthropicSchema","compactChatGPTSchema","compactPluginsSchema","length","bannerId","message","displayFrom","displayTo","compactAgentsSchema","bedrockInputSchema","s.tConversationSchema","s.removeNullishValues","bedrockInputParser","catchall","any","data","knownKeys","additionalFields","typedData","entries","bedrockOutputParser","__spreadArray","shape","supportsFiles","azureAssistants","azureOpenAI","excelFileTypes","fullMimeTypesList","codeInterpreterMimeTypesList","retrievalMimeTypesList","imageExtRegex","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","codeTypeMapping","c","cs","cpp","md","php","py","rb","tex","js","sh","ts","tar","zip","retrievalMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","checkType","fileType","supportedTypes","some","regex","test","supportedMimeTypesSchema","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","convertStringsToRegex","patterns","reduce","acc","pattern","push","console","mergeFileConfig","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","field","FileSources","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","FileContext","checkOpenAIStorage","source","openai","azure","SettingsViews","defaultSocialLogins","defaultRetrievalModels","fileSourceSchema","getSchemaDefaults","schema","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","actions","fetch","userIdQuery","titleConvo","titleMethod","headers","agentsEndpointSChema","endpointSchema","safeParse","success","values","join","summarize","summaryModel","modelDisplayLabel","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","url","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","KnownEndpoints","FetchTokenConfig","configSchema","cache","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","privacyPolicy","externalUrl","openNewTab","termsOfService","modalAcceptance","modalTitle","modalContent","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","presets","prompts","fileStrategy","local","registration","socialLogins","allowedDomains","speech","rateLimits","modelSpecs","all","gptPlugins","strict","getConfigDefaults","VisionModes","defaultEndpoints","bingAI","chatGPTBrowser","alternateName","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","filter","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","validateVisionModel","additionalModels","availableModels","visionModel","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","providerEndpointMap","endpointSchemas","getEnabledEndpoints","endpointsEnv","process","env","ENDPOINTS","enabledEndpoints","orderEndpointsConfig","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","index","errorsToString","errors","path","envVarRegex","extractEnvVariable","envVarMatch","match","resolveHeaders","resolvedHeaders","Array","isArray","getFirstDefinedValue","possibleValues","returnValue","_i","possibleValues_1","getNonEmptyValue","possibleValues_2","parseConvo","conversation","Error","convo","parse","secondaryModels","getResponseSender","endpointOption","_mdl","_cgl","_ml","compactEndpointSchemas","parseCompactConvo","parseTextParts","contentParts","contentParts_1","part","TEXT","textValue","SEPARATORS","findLastSeparatorIndex","separators","lastIndex","separators_1","separator","lastIndexOf","ArtifactModes","deprecatedAzureVariables","conflictingAzureVariables","validateAzureGroups","configs","isValid","modelNames","modelGroupMap","groupMap","groupName","rest","mapModelToAzureConfig","modelConfig","groupConfig","result_1","azureOptions","azureOpenAIApiKey","apiKeyValue","modelDetails","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","azureOpenAIApiVersion","mapGroupToAzureConfig","firstModelName","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","avatar","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","requiredSettingFields","generateDynamicSchema","settings","schemaFields","settings_1","setting","range","minText","maxText","minTags","maxTags","Number","Boolean","String","Enum","warn","ZodArray","enum","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","validateSettingDefinitions","columnsSet","settings_2","columns","code","ZodIssueCode","add","size","next","settings_3","requiredSettingFields_1","settingTypes","component","Tags","Input","Textarea","placeholder","Slider","includeInput","Math","round","Checkbox","Switch","Dropdown","Combobox","columnSpan","floor","optionType","Custom","conversationSchema","zodType","typeName","isNaN","ZodError","SystemRoles","PermissionTypes","Permissions","generateOpenAISchema","customOpenAI","defaults","generateGoogleSchema","customGoogle","QueryKeys","MutationKeys","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","agentPermissionsSchema","multiConvoPermissionsSchema","roleSchema","PROMPTS","BOOKMARKS","AGENTS","MULTI_CONVO","roleDefaults","ADMIN","extend","USER","_q","setAcceptLanguageHeader","axios","common","setTokenHeader","token","shareRoot","shareMessages","createSharedLink","updateSharedLink","keysEndpoint","conversationsRoot","conversations","pageNumber","updateConversation","deleteConversation","search","q","queryParams","URLSearchParams","toString","images","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","conversationTags","encodeURIComponent","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","config","status","_retry","Promise","err_1","window","dispatchEvent","CustomEvent","detail","location","href","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","abortKey","endpoints.abortRequest","arg","payload","endpoints.addTagToConversation","endpoints.updateConversation","endpoints.deleteConversation","__rest","endpoints.agents","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","groupId","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","userId","file_id","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","skip","roleName","endpoints.getRole","params","searchQuery","endpoints.search","endpoints.getSharedLinks","endpoints.revokeUserKey","body","endpoints.updatePromptGroup","updates","endpoints.updateSharedLink","endpoints.images","endpoints.userKeyQuery","SSE","this","INITIALIZING","CONNECTING","OPEN","CLOSED","method","withCredentials","FIELD_SEPARATOR","listeners","xhr","readyState","chunk","addEventListener","listener","removeEventListener","filtered","element","e","onHandler","hasOwnProperty","call","defaultPrevented","callback","_setReadyState","state","event","_onStreamFailure","currentTarget","close","_onStreamAbort","_onStreamProgress","async","refreshResponse","Authorization","stream","err","responseText","substring","_parseEventChunk","bind","_onStreamLoaded","line","trimRight","trimLeft","_checkStreamClosed","XMLHttpRequest","DONE","header","open","setRequestHeader","send","abort","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","replace","cleanPath","fullURL","URL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","items","zodSchema","openAPISchemaToZod","describe","FunctionSignature","prototype","toObjectTool","ActionRequest","operation","isConsequential","contentType","authHeaders","setParams","operationHash","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","authorization_url","client_url","scope","token_exchange_method","api_key","oauth_client_id","oauth_client_secret","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","authToken","client_id","client_secret","grant_type","tokenResponse","access_token","execute","resolveRef","components","refPath","$ref","resolvedSchema","schemas","sanitizeOperationId","openapiToFunction","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","zodSchemas","baseUrl","servers","paths","methods","operationObj","defaultOperationId","operationId","summary","parametersSchema","paramObj","requestBody","apply","functionSignature","actionRequest","validateAndParseOpenAPISpec","specString","parsedSpec","load","httpMethod","responses","statusCode","refName","pop","createPayload","submission","userMessage","isContinued","s.tConvoUpdateSchema","server"],"mappings":"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"}